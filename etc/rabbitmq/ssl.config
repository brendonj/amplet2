% Simple config that enables SSL connections to the broker and enables the
% EXTERNAL authentication mechanism.
%
% Requires the rabbitmq_auth_mechanism_ssl plugin to be installed and enabled:
%  rabbitmq-plugins enable rabbitmq_auth_mechanism_ssl
%
% For information on:
%  authentication - http://www.rabbitmq.com/authentication.html
%  ssl - http://www.rabbitmq.com/ssl.html
%  auth + ssl - http://www.rabbitmq.com/blog/2011/02/07/who-are-you-authentication-and-authorisation-in-rabbitmq-231/
%  ssl auth plugin - http://hg.rabbitmq.com/rabbitmq-auth-mechanism-ssl/file/rabbitmq_v3_1_5/README

[
  {rabbit, [

     % We may want to drop PLAIN authentication and force everyone to
     % to use EXTERNAL with the SSL auth plugin so that we can verify their
     % identity, though this could be different depending on if this broker
     % is local or remote
     {auth_mechanisms, ['PLAIN', 'EXTERNAL']},

     % TCP and SSL listeners can be configured on different ports and addresses
     {tcp_listeners, [{'127.0.0.1', 5672}]},
     {ssl_listeners, [5671]},

     % Use the common name from the cert to identify the user, rather than
     % using the distinguished name (the default).
     {ssl_cert_login_from, common_name},

     % Locations of all the certs and keys required, as well as information
     % on how to deal with verification and certs. To use the SSL EXTERNAL
     % auth mechanism then verify_peer must be set as well as
     % fail_if_no_peer_cert. If these aren't set then the broker will refuse
     % to authenticate SSL logins.
     {ssl_options, [{cacertfile,"/home/brendonj/keys/testca/cacert.pem"},
                    {certfile,"/home/brendonj/keys/server/cert.pem"},
                    {keyfile,"/home/brendonj/keys/server/key.pem"},
                    {verify,verify_peer},
                    {fail_if_no_peer_cert,true}]}
   ]}
].
