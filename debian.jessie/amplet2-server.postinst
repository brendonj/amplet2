#!/bin/sh
# postinst script for amplet2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # If the amp_exchange exists then assume we have already set it up the
        # way we want it and make no further changes. If it doesn't exist then
        # set up the exchange, queues, bindings etc to match the default config
        # that nntsc ships with.
        if ! /usr/sbin/rabbitmqctl list_exchanges | \
                cut -f 1 | grep -qx amp_exchange; then

            # rabbitmqctl doesn't currently have commands for creating anything
            # useful except users and vhosts. I don't want to have to enable the
            # management plugin and use rabbitmqadmin just to run a couple of
            # simple commands, so we will eval them directly and hope the API
            # doesn't change:

            # create the exchange "amp_exchange" as direct, durable, extern
            /usr/sbin/rabbitmqctl eval 'rabbit_exchange:declare(rabbit_misc:r(<<"/">>, exchange, <<"amp_exchange">>), direct, true, false, false, []).' > /dev/null

            # create the queue "ampqueue" as durable, persistant, no owner
            /usr/sbin/rabbitmqctl eval 'rabbit_amqqueue:declare(rabbit_misc:r(<<"/">>, queue, <<"ampqueue">>), true, false, [], none).' > /dev/null

            # bind the queue to the exchange with routing key "amp"
            /usr/sbin/rabbitmqctl eval 'rabbit_binding:add({binding, Source = rabbit_misc:r(<<"/">>, exchange, <<"amp_exchange">>), Key = <<"amp">>, Destination = rabbit_misc:r(<<"/">>, queue, <<"ampqueue">>), Args = []}).' > /dev/null
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
