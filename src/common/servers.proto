package amplet2.servers;

message Control {
        enum Type {
                HELLO = 2;
                READY = 3;
                RECEIVE = 4;
                SEND = 5;
                RESULT = 6;

                RENEW = 7;
                CLOSE = 8;
        }

        optional Type type = 1;

        optional Hello hello = 2;
        optional Ready ready = 3;
        optional Receive receive = 4;
        optional Send send = 5;
        optional Result result = 6;

        /* TODO these are throughput only messages, move them out */
        optional Renew renew = 7;
        optional Close close = 8;
}

message Hello {
        optional uint32 test_port = 1;

        /* TODO these are udpstream test args, move them out */
        optional uint32 packet_size = 2 [default = 100];
        optional uint32 packet_count = 3 [default = 11];
        optional uint32 packet_spacing = 4 [default = 1000];
        optional uint32 percentile_count = 5 [default = 10];

        /* TODO these are throughput test args, move them out */
        optional uint32 mss = 6;
        optional int32 rcvbuf = 7;
        optional int32 sndbuf = 8;
        optional bool disable_nagle = 9;
        optional bool disable_web10g = 10;
        optional bool randomise = 11;
        optional bool reuse_addr = 12;
        optional uint32 write_size = 13;
}

message Ready {
        optional uint32 test_port = 1;
}

message Receive {
        optional uint32 packet_count = 1 [default = 10];
}

message Send {
        optional uint32 test_port = 1;

        /* TODO these are throughput test args, move them out */
        optional uint32 duration_ms = 2;
        optional uint32 write_size = 3;
        optional uint64 bytes = 4;
}

message Result {
        optional bytes result = 1;
}

message Renew {
}

message Close {
}
