#!/bin/sh
# postinst script for amplet2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# TODO is there a way we can get this information from dpkg?
PACKAGE="amplet2"

case "$1" in
    configure)
        # Debian packaging will create the directory with standard permissions
        chown -r rabbitmq:root /etc/${PACKAGE}/keys
        chmod 700 /etc/${PACKAGE}/keys
        # TODO fetch the keys somehow and save them here


        # TODO install rsyslog config here? mark as conffile somewhere/how?
        if [ ! -f "/etc/rsyslog.d/amplet2.conf" ]; then
            cp /usr/share/${PACKAGE}/rsyslog/amplet2.conf /etc/rsyslog.d/90-amplet2.conf
            if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                invoke-rc.d rsyslog restart || exit $?
            else
                /etc/init.d/rsyslog restart || exit $?
            fi
        fi

        # Don't do anything with rabbit if $HOME isn't set, as some of the
        # rabbit scripts require it. The only obvious case where $HOME isn't
        # set is when this is being run with puppet, in which case this is all
        # taken care of anyway.
        if [ -n "$HOME" ]; then
            # Enable the shovel plugin for rabbitmq
            if [ -x "`which rabbitmq-plugins 2>/dev/null`" ]; then
                rabbitmq-plugins enable rabbitmq_shovel || exit $?
            else
                echo "Can't enable shovel plugin, aborting"
                exit 1
            fi

            # TODO for now we assume that rabbitmq-server is only present
            # because of us, so we can use the main instance and default config
            # file location
            if [ ! -f "/etc/rabbitmq/rabbitmq.config" ]; then
                ln -s /etc/${PACKAGE}/shovel.config /etc/rabbitmq/rabbitmq.config
                if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                    invoke-rc.d rabbitmq-server restart || exit $?
                else
                    /etc/init.d/rabbitmq-server restart || exit $?
                fi
            else
                echo "/etc/rabbitmq/rabbitmq.config already exists."
                echo "Please merge with /etc/${PACKAGE}/shovel.config and restart rabbitmq"
            fi

            # TODO create vhost just for AMP?
            # create the local user with the same name that we will use for
            # reporting upstream - in this case it's the FQDN
            if [ -x "`which rabbitmqctl 2>/dev/null`" ]; then
                echo "Skipping rabbit config temporarily"
                #rabbitmqctl add_user $USER $USER
                #rabbitmqctl set_permissions -p / $USER ".*" ".*" ".*"
            fi
        fi

        # Install the appropriate config as the main client.conf
        if [ ! -f "/etc/${PACKAGE}/client.conf" ]; then
            ln -s /etc/${PACKAGE}/client-local.conf /etc/${PACKAGE}/client.conf
        else
            echo "/etc/${PACKAGE}/client.conf already exists, skipping"
        fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
