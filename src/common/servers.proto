package amplet2.servers;

message Control {
        enum Type {
                HELLO = 2;
                READY = 3;
                RECEIVE = 4;
                SEND = 5;
                RESULT = 6;

                RENEW = 7;
        }

        optional Type type = 1;

        optional Hello hello = 2;
        optional Ready ready = 3;
        optional Receive receive = 4;
        optional Send send = 5;
        optional Result result = 6;

        /*
         * TODO ideally we could use extensions here, but in the medium term
         * someone should add a generic field that tests can add messages to,
         * and flag them with a type field inside the test specific protobuf
         * descriptions. We shouldn't have test specific messages at this
         * level.
         */
        optional Renew renew = 7;
}

message Hello {
        /* XXX is this a global option for all tests? */
        optional uint32 test_port = 1;

        optional bytes options = 2;
        /* XXX extensions aren't yet implemented in protobuf-c :( */
        extensions 100 to 1000;
}

message Ready {
        /* XXX is test port a global option for all tests? */
        optional uint32 test_port = 1;
}

message Receive {
        optional bytes options = 1;
        /* XXX extensions aren't yet implemented in protobuf-c :( */
        extensions 100 to 1000;
}

message Send {
        optional bytes options = 2;
        /* XXX extensions aren't yet implemented in protobuf-c :( */
        extensions 100 to 1000;
}

message Result {
        optional bytes result = 1;
        /* XXX extensions aren't yet implemented in protobuf-c :( */
        extensions 100 to 1000;
}

message Renew {
}
